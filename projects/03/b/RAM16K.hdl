// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    And(a=true, b=address[12], out=A);
    And(a=true, b=address[13], out=B);
    Not(in=A, out=notA);
    Not(in=B, out=notB);

    And(a=notA, b=notB, out=load00);
    And(a=A, b=notB, out=load01);
    And(a=notA, b=B, out=load10);
    And(a=A, b=B, out=load11);

    And(a=load00, b=load, out=reg0);
    And(a=load01, b=load, out=reg1);
    And(a=load10, b=load, out=reg2);
    And(a=load11, b=load, out=reg3);

    RAM4K(in=in, load=reg0, address=address[0..11], out=o0);
    RAM4K(in=in, load=reg1, address=address[0..11], out=o1);
    RAM4K(in=in, load=reg2, address=address[0..11], out=o2);
    RAM4K(in=in, load=reg3, address=address[0..11], out=o3);

    Mux4Way16(a=o0, b=o1, c=o2, d=o3, sel=address[12..13], out=out);
}
